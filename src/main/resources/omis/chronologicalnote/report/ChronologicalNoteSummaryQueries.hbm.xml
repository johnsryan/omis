<?xml version="1.0" encoding="UTF-8"?>
<!--
 - OMIS - Offender Management Information System
 - Copyright (C) 2011 - 2017 State of Montana
 -
 - This program is free software: you can redistribute it and/or modify
 - it under the terms of the GNU General Public License as published by
 - the Free Software Foundation, either version 3 of the License, or
 - (at your option) any later version.
 -
 - This program is distributed in the hope that it will be useful,
 - but WITHOUT ANY WARRANTY; without even the implied warranty of
 - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 - GNU General Public License for more details.
 -
 - You should have received a copy of the GNU General Public License
 - along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->

<!-- 
  - Chronological note summary queries.
  -
  - Author: Yidong Li
  -->

<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.chronologicalnote">
	<query name="findChronologicalNoteSummaryByOffender"><![CDATA[
	select new omis.chronologicalnote.report.ChronologicalNoteSummary(
		note.id,
		note.date,
		note.title,
		note.narrative,
		name.lastName,
		name.firstName,
		userAccount.username,
		note.updateSignature.date
      ) 
    from 
    	omis.chronologicalnote.domain.ChronologicalNote note
    	inner join note.offender offender
    	inner join note.updateSignature.userAccount userAccount
    	inner join userAccount.user user
    	inner join user.name name
    where offender = :offender
    order by note.date desc
	]]></query>
    
    <query name="findCategoryNamesByNoteId"><![CDATA[   
	select category.name
	from
		omis.chronologicalnote.domain.ChronologicalNoteCategoryAssociation association
		inner join association.category category
	where
		association.note.id = :noteId
    ]]></query>
    
    <query name="findChronologicalNoteSummaryByOffenderAndCategories"><![CDATA[  
    select new omis.chronologicalnote.report.ChronologicalNoteSummary(
		note.id,
		note.date,
		note.title,
		note.narrative,
		name.lastName,
		name.firstName,
		userAccount.username,
		note.updateSignature.date
      ) 
    from 
    	omis.chronologicalnote.domain.ChronologicalNote note
    	inner join note.offender offender
    	inner join note.updateSignature.userAccount userAccount
    	inner join userAccount.user user
    	inner join user.name name
    where exists (select category
					from omis.chronologicalnote.domain.ChronologicalNoteCategoryAssociation association
					inner join association.category category  
				  where category in (:categories)
			      and association.note = note)
		  and offender = :offender
	order by note.date desc
    ]]></query>
</hibernate-mapping>