<?xml version="1.0" encoding="UTF-8"?>
<!--
 - OMIS - Offender Management Information System
 - Copyright (C) 2011 - 2017 State of Montana
 -
 - This program is free software: you can redistribute it and/or modify
 - it under the terms of the GNU General Public License as published by
 - the Free Software Foundation, either version 3 of the License, or
 - (at your option) any later version.
 -
 - This program is distributed in the hope that it will be useful,
 - but WITHOUT ANY WARRANTY; without even the implied warranty of
 - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 - GNU General Public License for more details.
 -
 - You should have received a copy of the GNU General Public License
 - along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.hearing.report">
	<!-- <query name="findUnresolvedViolationSummaries"><![CDATA[
		select new omis.hearing.report.ViolationSummary(
			conditionViolation.id,
			disciplinaryCodeViolation.id,
			violationEvent.category,
			disciplinaryCode.description,
			condition.clause,
			violationEvent.event.details)
		from
			omis.violationevent.domain.ViolationEvent violationEvent
		left outer join
			omis.violationevent.domain.DisciplinaryCodeViolation disciplinaryCodeViolation
			with
			disciplinaryCodeViolation.violationEvent = violationEvent
		inner join
			disciplinaryCodeViolation.disciplinaryCode disciplinaryCode
		left outer join
			omis.violationevent.domain.ConditionViolation conditionViolation
			with
			conditionViolation.violationEvent = violationEvent
		inner join
			conditionViolation.condition condition
		where
			violationEvent.offender = :offender
		and
			(
				violationEvent in
				(
					select violationEventSub 
					from
						omis.violationevent.domain.ConditionViolation conditionViolation
					inner join
						conditionViolation.violationEvent violationEventSub
					where
						violationEventSub = violationEvent
					and
						conditionViolation not in
						(
							select conditionViolationSub
							from
								omis.hearing.domain.Infraction infraction
							inner join
								infraction.conditionViolation conditionViolationSub
							where
								conditionViolationSub = conditionViolation
						)
				)
				or
				violationEvent in
				(
					select violationEventSub 
					from
						omis.violationevent.domain.DisciplinaryCodeViolation disciplinaryCodeViolation
					inner join
						disciplinaryCodeViolation.violationEvent violationEventSub
					where
						violationEventSub = violationEvent
					and
						disciplinaryCodeViolation not in
						(
							select disciplinaryCodeViolationSub
							from
								omis.hearing.domain.Infraction infraction
							inner join
								infraction.disciplinaryCodeViolation disciplinaryCodeViolationSub
							where
								disciplinaryCodeViolationSub = disciplinaryCodeViolation
						)
				)
			)
	]]></query> -->
	<query name="findUnadjudicatedHearingsByOffender"><![CDATA[
		select new omis.hearing.report.HearingSummary(
			hearing.id,
			hearing.date,
			organization.name,
			hearing.category,
			status.category,
			status.date)
		from
			omis.hearing.domain.HearingStatus status
		right outer join
			status.hearing hearing
		inner join
			hearing.location location
		inner join
			location.organization organization
		where
			hearing.subject.offender = :offender
		and
			status.date
			in
				(select MAX(status.date) from status 
				where 
					status.hearing = hearing)
		and
			hearing
			in
				(select infraction.hearing from omis.hearing.domain.Infraction infraction
				where
				infraction.hearing = hearing
				and
				infraction.resolution.reason is null)
		order by hearing.date asc
	]]></query>
	<query name="findUnresolvedDisciplinaryViolationSummariesByHearing"><![CDATA[
		select new omis.hearing.report.ViolationSummary(
			infraction.disciplinaryCodeViolation.id,
			infraction.disciplinaryCodeViolation.violationEvent.category,
			infraction.disciplinaryCodeViolation.disciplinaryCode.description,
			infraction.disciplinaryCodeViolation.disciplinaryCode.value,
			infraction.disciplinaryCodeViolation.violationEvent.event.details,
			infraction.disciplinaryCodeViolation.violationEvent.event.date)
		from
			omis.hearing.domain.Infraction infraction
		inner join
			infraction.hearing hearing
		where
			hearing.id = :hearingId
		and
			infraction.disciplinaryCodeViolation is not null
		and
			infraction.resolution.reason is null
		order by
			infraction.disciplinaryCodeViolation.violationEvent.event.date desc
	]]></query>
	<query name="findUnresolvedConditionViolationSummariesByHearing"><![CDATA[
		select new omis.hearing.report.ViolationSummary(
			infraction.conditionViolation.violationEvent.category,
			infraction.conditionViolation.id,
			infraction.conditionViolation.condition.clause,
			infraction.conditionViolation.condition.conditionClause.conditionTitle.title,
			infraction.conditionViolation.violationEvent.event.details,
			infraction.conditionViolation.violationEvent.event.date)
		from
			omis.hearing.domain.Infraction infraction
		inner join
			infraction.hearing hearing
		where
			hearing.id = :hearingId
		and
			infraction.conditionViolation is not null
		and
			infraction.resolution.reason is null
		order by
			infraction.conditionViolation.violationEvent.event.date desc
	]]></query>
	<query name="findDisciplinaryViolationSummariesByHearing"><![CDATA[
		select new omis.hearing.report.ViolationSummary(
			infraction.disciplinaryCodeViolation.id,
			infraction.disciplinaryCodeViolation.violationEvent.category,
			infraction.disciplinaryCodeViolation.disciplinaryCode.description,
			infraction.disciplinaryCodeViolation.disciplinaryCode.value,
			infraction.disciplinaryCodeViolation.violationEvent.event.details,
			infraction.disciplinaryCodeViolation.violationEvent.event.date)
		from
			omis.hearing.domain.Infraction infraction
		inner join
			infraction.hearing hearing
		where
			hearing = :hearing
		and
			infraction.disciplinaryCodeViolation is not null
		order by
			infraction.disciplinaryCodeViolation.violationEvent.event.date desc
	]]></query>
	<query name="findConditionViolationSummariesByHearing"><![CDATA[
		select new omis.hearing.report.ViolationSummary(
			infraction.conditionViolation.violationEvent.category,
			infraction.conditionViolation.id,
			infraction.conditionViolation.condition.clause,
			infraction.conditionViolation.condition.conditionClause.conditionTitle.title,
			infraction.conditionViolation.violationEvent.event.details,
			infraction.conditionViolation.violationEvent.event.date)
		from
			omis.hearing.domain.Infraction infraction
		inner join
			infraction.hearing hearing
		where
			hearing = :hearing
		and
			infraction.conditionViolation is not null
		order by
			infraction.conditionViolation.violationEvent.event.date desc
	]]></query>
	<query name="findUnresolvedDisciplinaryViolationSummaries"><![CDATA[
		select new omis.hearing.report.ViolationSummary(
			disciplinaryCodeViolation.id,
			violationEvent.category,
			disciplinaryCode.description,
			disciplinaryCode.value,
			violationEvent.event.details,
			violationEvent.event.date)
		from
			omis.violationevent.domain.DisciplinaryCodeViolation disciplinaryCodeViolation
		inner join
			disciplinaryCodeViolation.violationEvent violationEvent
		inner join
			disciplinaryCodeViolation.disciplinaryCode disciplinaryCode
		where
			violationEvent.offender = :offender
		and
			disciplinaryCodeViolation not in
			(
				select disciplinaryCodeViolationSub
				from
					omis.hearing.domain.Infraction infraction
				inner join
					infraction.disciplinaryCodeViolation disciplinaryCodeViolationSub
				where
					disciplinaryCodeViolationSub = disciplinaryCodeViolation
			)
		order by
			violationEvent.event.date desc
	]]></query>
	<query name="findUnresolvedConditionViolationSummaries"><![CDATA[
		select new omis.hearing.report.ViolationSummary(
			violationEvent.category,
			conditionViolation.id,
			condition.clause,
			condition.conditionClause.conditionTitle.title,
			violationEvent.event.details,
			violationEvent.event.date)
		from
			omis.violationevent.domain.ConditionViolation conditionViolation
		inner join
			conditionViolation.violationEvent violationEvent
		inner join
			conditionViolation.condition condition
		where
			violationEvent.offender = :offender
		and
			conditionViolation not in
			(
				select conditionViolationSub
				from
					omis.hearing.domain.Infraction infraction
				inner join
					infraction.conditionViolation conditionViolationSub
				where
					conditionViolationSub = conditionViolation
			)
		order by
			violationEvent.event.date desc
	]]></query>
	<query name="findResolvedConditionViolationSummaries"><![CDATA[
		select new omis.hearing.report.ViolationSummary(
			infraction.id,
			infraction.conditionViolation.violationEvent.category,
			infraction.conditionViolation.id,
			infraction.conditionViolation.condition.clause,
			infraction.conditionViolation.condition.conditionClause.conditionTitle.title,
			infraction.conditionViolation.violationEvent.event.details,
			infraction.conditionViolation.violationEvent.event.date,
			infraction.resolution.reason,
			infraction.resolution.decision,
			cast(infraction.resolution.disposition as string),
			infraction.resolution.appealDate,
			imposedSanction.description,
			infraction.resolution.category)
		from
			omis.hearing.domain.ImposedSanction imposedSanction
		right outer join
			imposedSanction.infraction infraction
		where
			infraction.conditionViolation is not null
		and
			infraction.conditionViolation.violationEvent.offender = :offender
		and
			infraction.resolution.reason is not null
		order by
			infraction.conditionViolation.violationEvent.event.date desc
	]]></query>
	<query name="findResolvedDisciplinaryCodeViolationSummaries"><![CDATA[
		select new omis.hearing.report.ViolationSummary(
			infraction.id,
			infraction.disciplinaryCodeViolation.id,
			infraction.disciplinaryCodeViolation.violationEvent.category,
			infraction.disciplinaryCodeViolation.disciplinaryCode.description,
			infraction.disciplinaryCodeViolation.disciplinaryCode.value,
			infraction.disciplinaryCodeViolation.violationEvent.event.details,
			infraction.disciplinaryCodeViolation.violationEvent.event.date,
			infraction.resolution.reason,
			infraction.resolution.decision,
			cast(infraction.resolution.disposition as string),
			infraction.resolution.appealDate,
			imposedSanction.description,
			infraction.resolution.category)
		from
			omis.hearing.domain.ImposedSanction imposedSanction
		right outer join
			imposedSanction.infraction infraction
		where
			infraction.disciplinaryCodeViolation is not null
		and
			infraction.disciplinaryCodeViolation.violationEvent.offender = :offender
		and
			infraction.resolution.reason is not null
		order by
			infraction.disciplinaryCodeViolation.violationEvent.event.date desc
	]]></query>
	<query name="summarizeConditionViolation"><![CDATA[
		select new omis.hearing.report.ViolationSummary(
			conditionViolation.id,
			violationEvent.event.details,
			violationEvent.category,
			'',
			'',
			condition.clause,
			condition.conditionClause.conditionTitle.title,
			violationEvent.event.date)
		from
			omis.violationevent.domain.ConditionViolation conditionViolation
		inner join
			conditionViolation.violationEvent violationEvent
		inner join
			conditionViolation.condition condition
		where
			conditionViolation = :conditionViolation
	]]></query>
	<query name="summarizeDisciplinaryCodeViolation"><![CDATA[
		select new omis.hearing.report.ViolationSummary(
			disciplinaryCodeViolation.id,
			violationEvent.event.details,
			violationEvent.category,
			disciplinaryCode.description,
			disciplinaryCode.value,
			'',
			'',
			violationEvent.event.date)
		from
			omis.violationevent.domain.DisciplinaryCodeViolation disciplinaryCodeViolation
		inner join
			disciplinaryCodeViolation.violationEvent violationEvent
		inner join
			disciplinaryCodeViolation.disciplinaryCode disciplinaryCode
		where
			disciplinaryCodeViolation = :disciplinaryCodeViolation
	]]></query>
</hibernate-mapping>