<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.medicalreview.domain">
	<class entity-name="omis.medicalreview.domain.MedicalReview"
			proxy="omis.medicalreview.domain.MedicalReview"
			name="omis.medicalreview.domain.impl.MedicalReviewImpl"
			table="`MEDICAL_REVIEW`">
			<id name="id" column="`ID`" type="java.lang.Long">
				<generator class="sequence">
					<param name="sequence">`MEDICAL_REVIEW_SEQ`</param>
				</generator>
			</id>
			<many-to-one name="offender" column="`OFFENDER_ID`" entity-name="omis.offender.domain.Offender" not-null="true" />
			<property name="text" column="`TEXT`" type="java.lang.String" not-null="true" />
			<property name="date" column="`DATE`" type="java.util.Date" not-null="true" />
			<many-to-one name="healthClassification" column="`MEDICAL_HELTH_CLASSIFICATN_ID`" entity-name="omis.medicalreview.domain.MedicalHealthClassification" not-null="true" />
			<component name="creationSignature">
				<many-to-one name="userAccount" column="`CREATE_ACCOUNT_ID`" not-null="true"/>
				<property name="date" column="`CREATE_DATE`" not-null="true"/> 	
			</component>
			<component name="updateSignature">
				<many-to-one name="userAccount" column="`UPDATE_ACCOUNT_ID`" not-null="true"/>
				<property name="date" column="`UPDATE_DATE`" not-null="true"/>
			</component>
	</class>
	<query name="findMedicalReview"><![CDATA[
		select medicalReview
		from
			omis.medicalreview.domain.MedicalReview medicalReview
		where
			medicalReview.offender = :offender
		and
			medicalReview.date = :date
		and
			medicalReview.healthClassification = :healthClassification
	]]></query>
	<query name="findMedicalReviewExcluding"><![CDATA[
		select medicalReview
		from
			omis.medicalreview.domain.MedicalReview medicalReview
		where
			medicalReview.offender = :offender
		and
			medicalReview.date = :date
		and
			medicalReview.healthClassification = :healthClassification
		and
			medicalReview != :medicalReview
	]]></query>
</hibernate-mapping>