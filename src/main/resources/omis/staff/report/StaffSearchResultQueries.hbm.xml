<?xml version="1.0" encoding="UTF-8"?>
<!--
 - Queries for reporting staff assignments.
 -
 - Author: Ryan Johns
 - Author: Sheronda Vaughn
 - Author: Stephen Abson
 - Version: 0.1.0 (Jul 17, 2014)
 - Since: OMIS 3.0
 -->
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="omis.staff.report">
	<query name="findStaffSummaryById"><![CDATA[
	 	SELECT new omis.staff.report.StaffSearchResult(staffAssignment.id, 
		       staffTitle.name, supervisoryOrganization.name, name.id,
		       person.id, name.firstName, name.middleName, name.lastName, name.suffix)
		  FROM omis.staff.domain.StaffAssignment as staffAssignment
    RIGHT JOIN staffAssignment.staffMember as person
    RIGHT JOIN staffAssignment.title as staffTitle
    RIGHT JOIN staffAssignment.supervisoryOrganization as supervisoryOrganization
    RIGHT JOIN person.name as name
         WHERE staffAssignment.id = :id
	]]></query>
	
	<query name="findStaffSummaryByFirstLast"><![CDATA[
	 	SELECT new omis.staff.report.StaffSearchResult(staffAssignment.id, 
		       staffTitle.name, supervisoryOrganization.name, name.id,
		       person.id, name.firstName, name.middleName, name.lastName, name.suffix)
		  FROM omis.staff.domain.StaffAssignment as staffAssignment
    RIGHT JOIN staffAssignment.staffMember as person
    RIGHT JOIN staffAssignment.title as staffTitle
    RIGHT JOIN staffAssignment.supervisoryOrganization as supervisoryOrganization
    RIGHT JOIN person.name as name
         WHERE (utl_match.JARO_WINKLER_SIMILARITY(upper(name.lastName), upper(:name2)) >= 90
		   AND utl_match.JARO_WINKLER_SIMILARITY(upper(name.firstName), upper(:name1)) >= 85)
	       AND (staffAssignment.dateRange.startDate is null
	           OR staffAssignment.dateRange.startDate <= :date)
           AND (staffAssignment.dateRange.endDate is null
               or staffAssignment.dateRange.endDate > :date)
	]]></query>
	
		<query name="findStaffSummaryByFirstMiddleLast"><![CDATA[
	  SELECT new omis.staff.report.StaffSearchResult(staffAssignment.id, 
		       staffTitle.name, supervisoryOrganization.name, name.id,
		       person.id, name.firstName, name.middleName, name.lastName, name.suffix)
		  FROM omis.staff.domain.StaffAssignment staffAssignment
    RIGHT JOIN staffAssignment.staffMember as person
    RIGHT JOIN staffAssignment.title as staffTitle
    RIGHT JOIN staffAssignment.supervisoryOrganization as supervisoryOrganization
    RIGHT JOIN person.name as name
	      WHERE utl_match.JARO_WINKLER_SIMILARITY(upper(name.lastName), upper(:last)) >= 90 
	        AND (utl_match.JARO_WINKLER_SIMILARITY(upper(name.middleName), upper(:middle)) >= 90
	         OR upper(name.middleName) like upper(:middle) || '%' 
	         OR name.middleName is null 
	         OR name.middleName like '') 
	        AND utl_match.JARO_WINKLER_SIMILARITY(upper(name.firstName),upper(:first)) > 85
	        AND (staffAssignment.dateRange.startDate is null
	            OR staffAssignment.dateRange.startDate <= :date)
            AND (staffAssignment.dateRange.endDate is null
                OR staffAssignment.dateRange.endDate > :date)
	   ORDER BY name.lastName, name.firstName
	]]></query>
	
	<query name="findStaffSummaryByLast"><![CDATA[
            SELECT new omis.staff.report.StaffSearchResult(staffAssignment.id,
                       staffTitle.name, supervisoryOrganization.name, name.id,
                       person.id, name.firstName, name.middleName, name.lastName, name.suffix)
                  FROM omis.staff.domain.StaffAssignment as staffAssignment
        INNER JOIN staffAssignment.staffMember as person
    INNER JOIN staffAssignment.title as staffTitle
    INNER JOIN staffAssignment.supervisoryOrganization as supervisoryOrganization
    INNER JOIN person.name as name
             WHERE upper(name.lastName) like upper(:last || '%' )
                AND (staffAssignment.dateRange.startDate is null
                    OR staffAssignment.dateRange.startDate <= :date)
            AND (staffAssignment.dateRange.endDate is null
                OR staffAssignment.dateRange.endDate > :date)
	]]></query>
	
	<query name="findStaffSummaryByUsername"><![CDATA[
		    SELECT new omis.staff.report.StaffSearchResult(staffAssignment.id, 
		       staffTitle.name, supervisoryOrganization.name, name.id,
		       person.id, name.firstName, name.middleName, name.lastName, name.suffix)
		  FROM omis.staff.domain.StaffAssignment as staffAssignment,
		       omis.user.domain.UserAccount ua
	INNER JOIN staffAssignment.staffMember as person
    LEFT OUTER JOIN staffAssignment.title as staffTitle
    LEFT OUTER JOIN staffAssignment.supervisoryOrganization as supervisoryOrganization
    INNER JOIN person.name as name
         WHERE upper(ua.username) like upper(:username)
           AND staffAssignment.staffMember = ua.user
	       AND (staffAssignment.dateRange.startDate is null
	           OR staffAssignment.dateRange.startDate <= :date)
           AND (staffAssignment.dateRange.endDate is null
               OR staffAssignment.dateRange.endDate > :date)
	]]></query>
	
	  <query name="searchingForStaff"><![CDATA[
	  	select new omis.staff.report.StaffSearchSummary(
	  	person.id, name.firstName, name.middleName, name.lastName, name.suffix, 
	  	staffTitle.name, supervisoryOrganization.name, division.name, 
	  	staffAssignment.telephoneNumber, staffAssignment.emailAddress,
	  	case when
	  		supervisoryOrganization is not null
	  		then true
	  		else false
	  		end)
	  	from 
	  		omis.staff.domain.StaffAssignment staffAssignment
	  		inner join staffAssignment.staffMember person
	  		inner join person.name name
	  		left outer join staffAssignment.title staffTitle
	  		left outer join staffAssignment.supervisoryOrganization supervisoryOrganization
	  		left outer join staffAssignment.organizationDivision division
	  	where 
	  		((upper(name.firstName) like upper(:firstName || '%' ) or :firstName is null)
	 		and (upper(name.lastName) like upper(:lastName || '%' ) or :lastName is null)
	 		and (supervisoryOrganization = :organization or :organization is null)
	 		and (division = :division or :division is null))
	 		order by
	 		name.lastName, name.firstName		
	  ]]></query>
	  
	  <query name="findAllSupervisoryOrganizations"><![CDATA[
	  select organizations
	  	from 
		  	omis.supervision.domain.SupervisoryOrganization organizations
		 order by
	  			organizations.name 
	  ]]></query>
	  
	  <query name="findAllOrganizationDivisions"><![CDATA[
	  select divisions
	  	from 
		  	omis.organization.domain.OrganizationDivision divisions
		 order by
	  			divisions.name 
	  ]]></query>
</hibernate-mapping>