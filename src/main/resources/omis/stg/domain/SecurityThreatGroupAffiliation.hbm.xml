<?xml version="1.0" encoding="UTF-8"?>
<!--
 - Author: Stephen Abson
 -->
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.stg.domain">
	<class	entity-name="omis.stg.domain.SecurityThreatGroupAffiliation"
			proxy="omis.stg.domain.SecurityThreatGroupAffiliation"
			name="omis.stg.domain.impl.SecurityThreatGroupAffiliationImpl"
			table="`STG_AFFILIATION`">
		<id name="id" type="java.lang.Long" column="`ID`">
			<generator class="sequence">
				<param name="sequence">`STG_AFFILIATION_SEQ`</param>
			</generator>
		</id>
        <component name="creationSignature" class="omis.audit.domain.CreationSignature">
          <many-to-one name="userAccount" entity-name="omis.user.domain.UserAccount" not-null="true" column="`CREATE_ACCOUNT_ID`"/>
      	  <property name="date" type="java.util.Date" not-null="true" column="`CREATE_DATE`"/>
        </component>
        <component name="updateSignature" class="omis.audit.domain.UpdateSignature">
          <many-to-one name="userAccount" entity-name="omis.user.domain.UserAccount" not-null="true" column="`UPDATE_ACCOUNT_ID`"/>
      	  <property name="date" type="java.util.Date" not-null="true" column="`UPDATE_DATE`"/>
        </component>		
		<properties name="uniqueSecurityThreatGroupAffiliation">
			<many-to-one name="offender" entity-name="omis.offender.domain.Offender" not-null="true"
			             column="`OFFENDER_ID`"/>
			<many-to-one name="group" entity-name="omis.stg.domain.SecurityThreatGroup" not-null="true"
			             column="`GROUP_ID`"/>
			<component name="dateRange" class="omis.datatype.DateRange">
				<property name="startDate" type="java.util.Date" not-null="false" column="`START_DATE`"/>
				<property name="endDate" type="java.util.Date" not-null="false" column="`END_DATE`"/>
			</component>
		</properties>
		<many-to-one name="state" entity-name="omis.region.domain.State" not-null="false"
		             column="`STATE_ID`"/>
		<many-to-one name="city" entity-name="omis.region.domain.City" not-null="false"
		             column="`CITY_ID`"/>
		<many-to-one name="activityLevel" entity-name="omis.stg.domain.SecurityThreatGroupActivityLevel"
		             not-null="false" column="`ACTIVITY_LEVEL_ID`"/>
		<many-to-one name="chapter" entity-name="omis.stg.domain.SecurityThreatGroupChapter"
		             not-null="false" column="`CHAPTER_ID`"/>
		<many-to-one name="rank" entity-name="omis.stg.domain.SecurityThreatGroupRank"
		             not-null="false" column="`RANK_ID`"/>
		<property name="moniker" type="java.lang.String" not-null="false" column="`MONIKER`"/>
		<property name="comment" type="java.lang.String" not-null="true" column="`COMMENT`"/>
		<component name="verificationSignature" class="omis.audit.domain.VerificationSignature">
			<many-to-one name="userAccount" entity-name="omis.user.domain.UserAccount" not-null="false" column="`VERIFICATION_ACCOUNT_ID`"/>
			<property name="date" type="java.util.Date" not-null="false" column="`VERIFICATION_DATE`"/>
			<property name="result" type="yes_no" not-null="false" column="`VERIFICATION_RESULT`"/>
			<many-to-one name="method" entity-name="omis.audit.domain.VerificationMethod" not-null="true" column="`VERIFICATION_METHOD_ID`"/>
		</component>
	</class>
	<query name="findSecurityThreatGroupAffiliationsByOffender"><![CDATA[
	  select securityThreatGroupAffiliation
	  from omis.stg.domain.SecurityThreatGroupAffiliation securityThreatGroupAffiliation
	  where securityThreatGroupAffiliation.offender = :offender
	]]></query>
	<query name="findSecurityThreatGroupAffiliation"><![CDATA[
	  select securityThreatGroupAffiliation
	  from omis.stg.domain.SecurityThreatGroupAffiliation securityThreatGroupAffiliation
	  where securityThreatGroupAffiliation.offender = :offender
	    and (
	    	securityThreatGroupAffiliation.dateRange.startDate = :startDate
	    	or (securityThreatGroupAffiliation.dateRange.startDate is null and :startDate is null)
	    )
	    and (
	    	securityThreatGroupAffiliation.dateRange.endDate = :endDate
	    	or (securityThreatGroupAffiliation.dateRange.endDate is null and :endDate is null)
	    )
	    and securityThreatGroupAffiliation.group = :group
	]]></query>
	<query name="findSecurityThreatGroupAffiliationExcluding"><![CDATA[
	  select securityThreatGroupAffiliation
	  from omis.stg.domain.SecurityThreatGroupAffiliation securityThreatGroupAffiliation
	  where securityThreatGroupAffiliation.offender = :offender
	    and (
	    	securityThreatGroupAffiliation.dateRange.startDate = :startDate
	    	or (securityThreatGroupAffiliation.dateRange.startDate is null and :startDate is null)
	    )
	    and (
	    	securityThreatGroupAffiliation.dateRange.endDate = :endDate
	    	or (securityThreatGroupAffiliation.dateRange.endDate is null and :endDate is null)
	    )
	    and securityThreatGroupAffiliation.group = :group
	    and securityThreatGroupAffiliation <> :excludedAffiliation
	]]></query>
	<query name="findSecurityThreatGroupAffiliationCountByOffenderAndDate"><![CDATA[
		select count(securityThreatGroupAffiliation.id)
		  from omis.stg.domain.SecurityThreatGroupAffiliation securityThreatGroupAffiliation
		 where securityThreatGroupAffiliation.offender = :offender
		   and ((securityThreatGroupAffiliation.dateRange.startDate <= :effectiveDate
		    or securityThreatGroupAffiliation.dateRange.startDate is null)
		   and (securityThreatGroupAffiliation.dateRange.endDate > :effectiveDate
		    or securityThreatGroupAffiliation.dateRange.endDate is null))
		   and (upper(securityThreatGroupAffiliation.activityLevel.name) = 'MEMBER'
		    or upper(securityThreatGroupAffiliation.activityLevel.name) = 'ASSOCIATE')
	]]></query>
</hibernate-mapping>