<?xml version="1.0" encoding="UTF-8"?>

<!--
 - OMIS - Offender Management Information System
 - Copyright (C) 2011 - 2017 State of Montana
 -
 - This program is free software: you can redistribute it and/or modify
 - it under the terms of the GNU General Public License as published by
 - the Free Software Foundation, either version 3 of the License, or
 - (at your option) any later version.
 -
 - This program is distributed in the hope that it will be useful,
 - but WITHOUT ANY WARRANTY; without even the implied warranty of
 - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 - GNU General Public License for more details.
 -
 - You should have received a copy of the GNU General Public License
 - along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->

<!--
  - Mappings and queries for placement term.
  -
  - Author: Stephen Abson
  -->
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="omis.supervision.domain">
	
	<!-- Defines placement status. -->
	<typedef name="placementStatus" class="org.hibernate.type.EnumType">
		<param name="enumClass">omis.supervision.domain.PlacementStatus</param>
		<param name="useNamed">true</param>
		<param name="type">12</param>
	</typedef>
	
	<!-- Maps placement term. -->
	<class entity-name="omis.supervision.domain.PlacementTerm"
	       proxy="omis.supervision.domain.PlacementTerm"
	       name="omis.supervision.domain.impl.PlacementTermImpl"
	       table="`PLACEMENT_TERM`">
		<id name="id" column="`ID`" type="java.lang.Long">
			<generator class="sequence">
				<param name="sequence">`PLACEMENT_TERM_SEQ`</param>
			</generator>
		</id>
		<many-to-one name="offender" entity-name="omis.offender.domain.Offender" not-null="true" column="`OFFENDER_ID`"/>
		<many-to-one name="supervisoryOrganizationTerm" entity-name="omis.supervision.domain.SupervisoryOrganizationTerm" not-null="false" column="`SUPERVISORY_ORGANZTN_TERM_ID`"/>
		<many-to-one name="correctionalStatusTerm" entity-name="omis.supervision.domain.CorrectionalStatusTerm" not-null="true" column="`CORRECTIONAL_STATUS_TERM_ID`"/>
		<many-to-one name="startChangeReason" entity-name="omis.supervision.domain.PlacementTermChangeReason" not-null="false" column="`START_CHANGE_REASON_ID`"/>
		<many-to-one name="endChangeReason" entity-name="omis.supervision.domain.PlacementTermChangeReason" not-null="false" column="`END_CHANGE_REASON_ID`"/>
		<property name="status" type="placementStatus" column="`STATUS`" not-null="true"/>
		<component name="statusDateRange" class="omis.datatype.DateRange">
			<property name="startDate" type="java.util.Date" not-null="false" column="`STATUS_START_DATE`"/>
			<property name="endDate" type="java.util.Date" not-null="false" column="`STATUS_END_DATE`"/>
		</component>
		<component name="dateRange" class="omis.datatype.DateRange">
			<property name="startDate" type="java.util.Date" not-null="false" column="`START_DATE`"/>
			<property name="endDate" type="java.util.Date" not-null="false" column="`END_DATE`"/>
		</component>
		<component name="creationSignature" class="omis.audit.domain.CreationSignature">
			<many-to-one name="userAccount" entity-name="omis.user.domain.UserAccount" not-null="true" column="`CREATE_ACCOUNT_ID`"/>
			<property name="date" type="java.util.Date" not-null="true" column="`CREATE_DATE`"/>
		</component>
		<component name="updateSignature" class="omis.audit.domain.UpdateSignature">
			<many-to-one name="userAccount" entity-name="omis.user.domain.UserAccount" not-null="true" column="`UPDATE_ACCOUNT_ID`"/>
			<property name="date" type="java.util.Date" not-null="true" column="`UPDATE_DATE`"/>
		</component>
		<property name="locked" type="yes_no" not-null="true" column="`LOCKED`"/>
	</class>
	
	<!-- Returns placement terms by offender. -->
	<query name="findPlacementTermsByOffender"><![CDATA[
		select placementTerm
		from omis.supervision.domain.PlacementTerm as placementTerm
		where placementTerm.offender = :offender
		order by placementTerm.dateRange.startDate desc
	]]></query>
	
	<!-- Returns placement terms by offender on date. -->
	<query name="findPlacementTermForOffenderOnDate"><![CDATA[
		select placementTerm
		from omis.supervision.domain.PlacementTerm as placementTerm
		where placementTerm.offender = :offender
		and (
				(placementTerm.dateRange.endDate is null or placementTerm.dateRange.endDate > :date)
				 and (placementTerm.dateRange.startDate is null or placementTerm.dateRange.startDate <= :date)
		)
	]]></query>
	
	<!-- Returns placement term. -->
	<query name="findPlacementTerm"><![CDATA[
		select placementTerm
		from omis.supervision.domain.PlacementTerm placementTerm
		where placementTerm.offender = :offender
			and placementTerm.correctionalStatusTerm = :correctionalStatusTerm
			and (placementTerm.supervisoryOrganizationTerm = :supervisoryOrganizationTerm
				or (placementTerm.supervisoryOrganizationTerm is null and :supervisoryOrganizationTerm is null))
			and (placementTerm.dateRange.startDate = :startDate
			  or (placementTerm.dateRange.startDate is null and :startDate is null))
			and (placementTerm.dateRange.endDate = :endDate
			  or (placementTerm.dateRange.endDate is null and :endDate is null))
	]]></query>
	
	<!-- Returns placement term (exclusive). -->
	<query name="findPlacementTermExcluding"><![CDATA[
		select placementTerm
		from omis.supervision.domain.PlacementTerm placementTerm
		where placementTerm.offender = :offender
			and placementTerm.correctionalStatusTerm = :correctionalStatusTerm
			and (placementTerm.supervisoryOrganizationTerm = :supervisoryOrganizationTerm
				or (placementTerm.supervisoryOrganizationTerm is null and :supervisoryOrganizationTerm is null))
			and (placementTerm.dateRange.startDate = :startDate
			  or (placementTerm.dateRange.startDate is null and :startDate is null))
			and (placementTerm.dateRange.endDate = :endDate
			  or (placementTerm.dateRange.endDate is null and :endDate is null))
			and placementTerm <> :excludedPlacementTerm
	]]></query>
	
	<!-- Counts placement terms between dates for offender. -->
	<query name="countPlacementTermsBetweenDatesForOffender"><![CDATA[
		select count (placementTerm)
		from omis.supervision.domain.PlacementTerm placementTerm
		where (placementTerm.dateRange.startDate <= :endDate or :endDate is null
				or placementTerm.dateRange.startDate is null)
			and (placementTerm.dateRange.endDate > :startDate or :startDate is null
				or placementTerm.dateRange.endDate is null)
			and placementTerm.offender = :offender
	]]></query>
	
	<!-- Counts placement terms between dates for offender (exclusive). -->
	<query name="countPlacementTermsBetweenDatesForOffenderExcluding"><![CDATA[
		select count (placementTerm)
		from omis.supervision.domain.PlacementTerm placementTerm
		where (placementTerm.dateRange.startDate <= :endDate or :endDate is null
				or placementTerm.dateRange.startDate is null)
			and (placementTerm.dateRange.endDate > :startDate or :startDate is null
				or placementTerm.dateRange.endDate is null)
			and placementTerm.offender = :offender
			and placementTerm not in (:excludePlacementTerms)
	]]></query>
	
	<!-- Counts placement terms by offender on date. -->
	<query name="countPlacementTermsByOffenderOnDate"><![CDATA[
		select count (placementTerm)
		from omis.supervision.domain.PlacementTerm placementTerm
		where (placementTerm.dateRange.startDate <= :effectiveDate)
			and (placementTerm.dateRange.endDate > :effectiveDate
				or placementTerm.dateRange.endDate is null)
			and placementTerm.offender = :offender
	]]></query>
	
	<!-- Returns placement terms by correctional status term. -->
	<query name="findPlacementTermsByCorrectionalStatusTerm"><![CDATA[
		select placementTerm
		from omis.supervision.domain.PlacementTerm placementTerm
		where placementTerm.correctionalStatusTerm = :correctionalStatusTerm
		order by placementTerm.dateRange.startDate desc
	]]></query>
	
	<!-- Returns placement terms by supervisory organization term. -->
	<query name="findPlacementTermsBySupervisoryOrganizationTerm"><![CDATA[
		select placementTerm
		from omis.supervision.domain.PlacementTerm placementTerm
		where placementTerm.supervisoryOrganizationTerm = :supervisoryOrganizationTerm
		order by placementTerm.dateRange.startDate desc
	]]></query>
	
	<!-- Counts placement terms by correctional status term. -->
	<query name="countPlacementTermsByCorrectionalStatusTerm"><![CDATA[
		select count(placementTerm)
		from omis.supervision.domain.PlacementTerm placementTerm
		where placementTerm.correctionalStatusTerm = :correctionalStatusTerm
	]]></query>
	
	<!-- Counts placement terms by supervisory organization term. -->
	<query name="countPlacementTermsBySupervisoryOrganizationTerm"><![CDATA[
		select count(placementTerm)
		from omis.supervision.domain.PlacementTerm placementTerm
		where placementTerm.supervisoryOrganizationTerm = :supervisoryOrganizationTerm
	]]></query>
	
	<!-- Returns placement term for offender with end date. -->
	<query name="findPlacementTermForOffenderWithEndDate"><![CDATA[
		select placementTerm
		from omis.supervision.domain.PlacementTerm placementTerm
		where placementTerm.offender = :offender
		  and (placementTerm.dateRange.endDate = :endDate
		    or (placementTerm.dateRange.endDate is null and :endDate is null))
	]]></query>
	
	<!-- Counts placement term by offender after date. -->
	<query name="countPlacementTermsByOffenderAfterDate"><![CDATA[
		select count (placementTerm)
		from omis.supervision.domain.PlacementTerm placementTerm
		where (placementTerm.dateRange.startDate >= :date)
			and placementTerm.offender = :offender
			and placementTerm <> :excludedPlacementTerm
	]]></query>
	
	<!-- Counts placement terms by offender before date. -->
	<query name="countPlacementTermsByOffenderBeforeDate"><![CDATA[
		select count (placementTerm)
		from omis.supervision.domain.PlacementTerm placementTerm
		where (placementTerm.dateRange.startDate <= :date
			or placementTerm.dateRange.endDate <= :date)
			and placementTerm.offender = :offender
			and placementTerm <> :excludedPlacementTerm
	]]></query>
</hibernate-mapping>